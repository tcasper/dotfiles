#! /bin/zsh

echo 'begin dotfiles setup...'

# Change into the directory above
cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)
echo 'Dotfiles root = ' $DOTFILES_ROOT

set -e

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

setup_gitconfig () {
  if ! [ -f git/gitconfig.symlink ]
  then
    echo 'Setup gitconfig'
    git_credential='cache'
    if [ "$(uname -s)" = "Darwin" ]
    then
      git_credential='osxkeychain'
    fi
  
    vared -p 'What is your github user name? ' -c git_authorname
    vared -p 'What is your github email? ' -c git_authoremail  

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.symlink.example > git/gitconfig.symlink

    success 'gitconfig'
  else
    echo 'Gitconfig not needed'
  fi
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=
  echo overwrite = $overwrite
  echo backup = $backup
  echo skip = $skip
  echo action = $action
  # If the file $dst exists and is a regular file 
  # OR the file is a directory
  # OR the file is a symlink
  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then
    echo the file $dst either already exists, is a directory, or is a symlink
    echo overwrite_all = $overwrite_all
    echo backup_all = $backup_all
    echo skip_all = $skip_all
    if [ "$overwrite_all" = "false" ] && [ "$backup_all" = "false" ] && [ "$skip_all" = "false" ]
    then
      echo overwrite and backup and skip are all false!
      local currentSrc="$(readlink $dst)"
      echo currentSrc = $currentSrc
      echo src = $src

      if [ "$currentSrc" = "$src" ]
      then
        echo currentsrc = src

        skip=true;

      else

        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" = "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" = "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" = "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}


install_dotfiles () {
  echo 'Installing dotfiles ...'

  local overwrite_all=false backup_all=false skip_all=false  

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

setup_gitconfig
install_dotfiles
