{"version":3,"sources":["update-preview.ts","mathjax-helper.ts","util.ts","../src/util-common.ts","main.ts"],"names":[],"mappings":"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","file":"main.c39d6dcf.js","sourceRoot":"../src-client","sourcesContent":["// This file incorporates code from [markmon](https://github.com/yyjhao/markmon)\n// covered by the following terms:\n//\n// Copyright (c) 2014, Yao Yujian, http://yjyao.com\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport morph = require('morphdom')\nimport { MathJaxController } from './mathjax-helper'\n\nexport class UpdatePreview {\n  constructor(\n    private dom: HTMLElement,\n    private mjController: MathJaxController,\n  ) {\n    /* no-op */\n  }\n\n  public async update(newDom: Element, renderLaTeX: boolean): Promise<void> {\n    for (const m of Array.from(newDom.querySelectorAll('span.math'))) {\n      const mscr = m.firstElementChild as HTMLScriptElement | null\n      if (!mscr || mscr.nodeName !== 'SCRIPT') continue\n      m.isSameNode = function(target: Node) {\n        if (target.nodeName !== 'SPAN') return false\n        const el = target as HTMLSpanElement\n        if (!el.classList.contains('math')) return false\n        const scr = el.querySelector('script')\n        if (!scr) return false\n        return mscr.innerHTML === scr.innerHTML && mscr.type === scr.type\n      }\n    }\n\n    morph(this.dom, newDom, {\n      childrenOnly: true,\n    })\n\n    // A very specific fix for #386 and #406\n    for (const li of this.dom.querySelectorAll('li')) {\n      if (\n        li.firstElementChild &&\n        li.firstElementChild === li.lastElementChild &&\n        li.firstElementChild.tagName === 'P' &&\n        li.firstChild &&\n        li.firstChild.nodeType === Node.TEXT_NODE &&\n        li.firstChild.textContent === '\\n'\n      ) {\n        li.removeChild(li.firstChild)\n      }\n    }\n\n    if (renderLaTeX) {\n      return this.mjController.queueTypeset(this.dom)\n    }\n  }\n}\n","//\n// mathjax-helper\n//\n// This module will handle loading the MathJax environment and provide a wrapper\n// for calls to MathJax to process LaTeX equations.\n//\n\nexport function processHTMLString(element: Element) {\n  const msvgh = document.getElementById('MathJax_SVG_Hidden')\n  const svgGlyphs = msvgh && msvgh.parentElement\n  if (svgGlyphs !== null) {\n    return svgGlyphs.outerHTML + element.innerHTML\n  } else {\n    return element.innerHTML\n  }\n}\n\nexport class MathJaxController {\n  private static mjSrc = `${global.require.resolve(\n    'mathjax',\n  )}?delayStartupUntil=configured`\n  private readonly readyPromise: Promise<void>\n\n  private constructor(\n    private userMacros: object,\n    private mathJaxConfig: MathJaxConfig,\n  ) {\n    this.readyPromise = this.attachMathJax()\n  }\n\n  public static async create(userMacros: object, mathJaxConfig: MathJaxConfig) {\n    const controller = new MathJaxController(userMacros, mathJaxConfig)\n    await controller.readyPromise\n    return controller\n  }\n\n  // for testing\n  public dispose(): void {\n    const script = document.head!.querySelector(\n      `script[src='${MathJaxController.mjSrc}']`,\n    )\n    if (script) script.remove()\n  }\n\n  public jaxTeXConfig() {\n    return {\n      extensions: this.mathJaxConfig.texExtensions,\n      Macros: this.userMacros,\n      equationNumbers: this.mathJaxConfig.numberEquations\n        ? {\n            autoNumber: 'AMS',\n            useLabelIds: false,\n          }\n        : {},\n    }\n  }\n\n  public async queueTypeset(domElement: Node) {\n    const hasUnprocessedMath = Array.from(\n      document.querySelectorAll('script[type^=\"math/tex\"]'),\n    ).some((x) => !x.id)\n    if (!hasUnprocessedMath) return\n    return new Promise<void>((resolve) => {\n      if (MathJax.InputJax.TeX) {\n        MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX])\n        if (this.mathJaxConfig.numberEquations) {\n          MathJax.Hub.Queue(['PreProcess', MathJax.Hub])\n          MathJax.Hub.Queue(['Reprocess', MathJax.Hub])\n        }\n      }\n\n      MathJax.Hub.Queue(['Typeset', MathJax.Hub, domElement])\n      MathJax.Hub.Queue([resolve])\n    })\n  }\n\n  private async attachMathJax(): Promise<void> {\n    console.log('Loading maths rendering engine MathJax')\n\n    // Attach MathJax script\n    await injectScript(MathJaxController.mjSrc)\n\n    MathJax.Hub.Config({\n      jax: ['input/TeX', `output/${this.mathJaxConfig.latexRenderer}`],\n      extensions: [],\n      TeX: this.jaxTeXConfig(),\n      'HTML-CSS': {\n        availableFonts: [],\n        webFont: 'TeX',\n        imageFont: null as any, // TODO: complain on DT\n        undefinedFamily: this.mathJaxConfig.undefinedFamily as any, // TODO: complain on DT\n        mtextFontInherit: true,\n      },\n      messageStyle: 'none',\n      showMathMenu: false,\n      skipStartupTypeset: true,\n    })\n    MathJax.Hub.Configured()\n\n    // Notify user MathJax has loaded\n    console.log('Loaded maths rendering engine MathJax')\n  }\n}\n\nasync function injectScript(scriptSrc: string) {\n  const script = document.createElement('script')\n  script.src = scriptSrc\n  script.type = 'text/javascript'\n  document.head!.appendChild(script)\n  return new Promise<void>((resolve) => {\n    script.addEventListener('load', () => resolve())\n  })\n}\n","export function handlePromise(promise: Promise<any>): void {\n  if (!promise) return\n  promise.catch((error: Error) => {\n    console.error(error)\n  })\n}\nimport { lstatSync, existsSync } from 'fs'\nexport function isFileSync(filePath: string) {\n  if (!existsSync(filePath)) return false\n  return lstatSync(filePath).isFile()\n}\n\nexport function resolveElement(\n  root: Element,\n  pathToToken: Array<{ tag: string; index: number }>,\n): Element | undefined {\n  let element = root\n  for (const token of pathToToken) {\n    const candidateElement: HTMLElement | null = element\n      .querySelectorAll(`:scope > ${token.tag}`)\n      .item(token.index) as HTMLElement\n    if (candidateElement) {\n      element = candidateElement\n    } else {\n      break\n    }\n  }\n\n  if (element === root) return undefined // Do not jump to the top of the preview for bad syncs\n  return element\n}\n","export function getMedia(document: HTMLDocument) {\n  return document.querySelectorAll(\n    'img[src],audio[src],video[src],link[href]',\n  ) as NodeListOf<\n    HTMLImageElement | HTMLAudioElement | HTMLVideoElement | HTMLLinkElement\n  >\n}\n","import { ipcRenderer } from 'electron'\nimport { UpdatePreview } from './update-preview'\nimport { MathJaxController, processHTMLString } from './mathjax-helper'\nimport * as util from './util'\nimport { getMedia } from '../src/util-common'\n\nwindow.addEventListener('error', (e) => {\n  const err = e.error as Error\n  ipcRenderer.sendToHost<'uncaught-error'>('uncaught-error', {\n    message: err.message,\n    name: err.name,\n    stack: err.stack,\n  })\n})\n\nwindow.addEventListener('unhandledrejection', (evt) => {\n  const err = (evt as any).reason as Error\n  ipcRenderer.sendToHost<'uncaught-error'>('uncaught-error', {\n    message: err.message,\n    name: err.name,\n    stack: err.stack,\n  })\n})\n\nfunction mkResPromise<T>() {\n  let resFn: (value?: T | PromiseLike<T> | undefined) => void\n  const p = new Promise<T>((resolve) => (resFn = resolve)) as Promise<T> & {\n    resolve: typeof resFn\n  }\n  p.resolve = resFn!\n  return p\n}\n\nconst atomVars = {\n  mathJax: mkResPromise<MathJaxController>(),\n  sourceLineMap: new Map<number, Element>(),\n  revSourceMap: new WeakMap<Element, number[]>(),\n}\n\nipcRenderer.on<'init'>('init', (_evt, params) => {\n  atomVars.mathJax.resolve(\n    MathJaxController.create(params.userMacros, params.mathJaxConfig),\n  )\n  document.documentElement!.dataset.markdownPreviewPlusContext = params.context\n  // tslint:disable-next-line:totality-check\n  if (params.context === 'pdf-export') {\n    document.documentElement!.style.setProperty(\n      'width',\n      `${params.pdfExportOptions.width}mm`,\n      'important',\n    )\n  }\n})\n\nipcRenderer.on<'set-source-map'>('set-source-map', (_evt, { map }) => {\n  const root = document.querySelector('div.update-preview')\n  if (!root) throw new Error('No root element!')\n  const slsm = new Map<number, Element>()\n  const rsm = new WeakMap<Element, number[]>()\n  for (const lineS of Object.keys(map)) {\n    const line = parseInt(lineS, 10)\n    const path = map[line]\n    const elem = util.resolveElement(root, path)\n    if (elem) {\n      slsm.set(line, elem)\n      const rsmel = rsm.get(elem)\n      if (rsmel) rsmel.push(line)\n      else rsm.set(elem, [line])\n    }\n  }\n  atomVars.sourceLineMap = slsm\n  atomVars.revSourceMap = rsm\n})\n\nipcRenderer.on<'scroll-sync'>(\n  'scroll-sync',\n  (_evt, { firstLine, lastLine }) => {\n    const mean = Math.floor(0.5 * (firstLine + lastLine))\n    const slm = atomVars.sourceLineMap\n    let topLine\n    let topBound\n    for (topLine = mean; topLine >= 0; topLine -= 1) {\n      topBound = slm.get(topLine)\n      if (topBound) break\n    }\n    if (!topBound) return\n\n    const max = Math.max(...Array.from(slm.keys()))\n    let bottomLine\n    let bottomBound\n    for (bottomLine = mean + 1; bottomLine < max; bottomLine += 1) {\n      bottomBound = slm.get(bottomLine)\n      if (bottomBound) break\n    }\n    if (!bottomBound) return\n    const topScroll = topBound.getBoundingClientRect().top\n    const bottomScroll = bottomBound.getBoundingClientRect().top\n    const frac = (mean - firstLine) / (lastLine - firstLine)\n    const offset = document.documentElement!.scrollTop\n    const clientHeight = document.documentElement!.clientHeight\n    const top =\n      offset - clientHeight / 2 + topScroll + frac * (bottomScroll - topScroll)\n    window.scroll({ top })\n  },\n)\n\nipcRenderer.on<'style'>('style', (_event, { styles }) => {\n  let styleElem = document.head!.querySelector('style#atom-styles')\n  if (!styleElem) {\n    styleElem = document.createElement('style')\n    styleElem.id = 'atom-styles'\n    document.head!.appendChild(styleElem)\n  }\n  styleElem.innerHTML = styles.join('\\n')\n})\n\nipcRenderer.on<'update-images'>('update-images', (_event, { oldsrc, v }) => {\n  const imgs = getMedia(document)\n  for (const img of Array.from(imgs)) {\n    let ovs: string | undefined\n    let ov: number | undefined\n    let attrName: 'href' | 'src'\n    if (img.tagName === 'LINK') attrName = 'href'\n    else attrName = 'src'\n    let src = img.getAttribute(attrName)!\n    const match = src.match(/^(.*)\\?v=(\\d+)$/)\n    if (match) [, src, ovs] = match\n    if (src === oldsrc) {\n      if (ovs !== undefined) ov = parseInt(ovs, 10)\n      if (v !== ov) img[attrName] = v ? `${src}?v=${v}` : `${src}`\n    }\n  }\n})\n\nipcRenderer.on<'sync'>('sync', (_event, { line, flash }) => {\n  const root = document.querySelector('div.update-preview')\n  if (!root) return\n\n  let element = atomVars.sourceLineMap.get(line)\n\n  if (!element) {\n    for (let i = line - 1; i >= 0; i -= 1) {\n      element = atomVars.sourceLineMap.get(line)\n      if (element) break\n    }\n  }\n\n  if (!element) return\n\n  element.scrollIntoViewIfNeeded(true)\n\n  if (flash) {\n    element.classList.add('flash')\n    setTimeout(() => element!.classList.remove('flash'), 1000)\n  }\n})\n\nlet updatePreview: UpdatePreview | undefined\n\nipcRenderer.on<'update-preview'>(\n  'update-preview',\n  async (_event, { id, html, renderLaTeX }) => {\n    // div.update-preview created after constructor st UpdatePreview cannot\n    // be instanced in the constructor\n    const preview = document.querySelector('div.update-preview')\n    if (!preview) return\n    if (!updatePreview) {\n      updatePreview = new UpdatePreview(\n        preview as HTMLElement,\n        await atomVars.mathJax,\n      )\n    }\n    const parser = new DOMParser()\n    const domDocument = parser.parseFromString(html, 'text/html')\n    const doc = document\n    if (doc && domDocument.head!.hasChildNodes) {\n      let container = doc.head!.querySelector('original-elements')\n      if (!container) {\n        container = doc.createElement('original-elements')\n        doc.head!.appendChild(container)\n      }\n      container.innerHTML = ''\n      for (const headElement of Array.from(domDocument.head!.childNodes)) {\n        container.appendChild(headElement)\n      }\n    }\n    await updatePreview.update(domDocument.body, renderLaTeX)\n    ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n      id,\n      request: 'update-preview',\n      result: processHTMLString(preview),\n    })\n  },\n)\n\nconst baseElement = document.createElement('base')\ndocument.head!.appendChild(baseElement)\n\nipcRenderer.on<'set-base-path'>('set-base-path', (_evt, { path }) => {\n  if (path) baseElement.href = path\n  else baseElement.href = ''\n})\n\nipcRenderer.on<'error'>('error', (_evt, { msg }) => {\n  const preview = document.querySelector('div.update-preview')\n  if (!preview) return\n  const errorDiv = document.createElement('div')\n  errorDiv.innerHTML = `<h2>Previewing Markdown Failed</h2><h3>${msg}</h3>`\n  preview.appendChild(errorDiv)\n})\n\ndocument.addEventListener('wheel', (event) => {\n  if (event.ctrlKey) {\n    if (event.deltaY > 0) {\n      ipcRenderer.sendToHost<'zoom-in'>('zoom-in', undefined)\n    } else if (event.deltaY < 0) {\n      ipcRenderer.sendToHost<'zoom-out'>('zoom-out', undefined)\n    }\n    event.preventDefault()\n    event.stopPropagation()\n  }\n})\n\ndocument.addEventListener('scroll', (_event) => {\n  const el = document.documentElement!\n  const height = el.clientHeight\n  const visible = Array.from(atomVars.sourceLineMap.entries())\n    .filter(([_line, elem]) => {\n      const { top, bottom } = elem.getBoundingClientRect()\n      return top > 0 && bottom < height\n    })\n    .map(([line, _elem]) => line)\n  ipcRenderer.sendToHost<'did-scroll-preview'>('did-scroll-preview', {\n    max: Math.max(...visible),\n    min: Math.min(...visible),\n  })\n})\n\nlet lastContextMenuTarget: HTMLElement\ndocument.addEventListener('contextmenu', (e) => {\n  lastContextMenuTarget = e.target as HTMLElement\n})\n\nipcRenderer.on<'sync-source'>('sync-source', (_, { id }) => {\n  let element = lastContextMenuTarget\n  const rsm = atomVars.revSourceMap\n  let lines = rsm.get(element)\n\n  while (!lines && element.parentElement) {\n    element = element.parentElement\n    lines = rsm.get(element)\n  }\n  if (!lines) return\n\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'sync-source',\n    result: Math.min(...lines),\n  })\n})\n\nipcRenderer.on<'reload'>('reload', (_, { id }) => {\n  window.onbeforeunload = null\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'reload',\n    result: undefined,\n  })\n})\n\nwindow.onbeforeunload = function() {\n  return false\n}\n\nipcRenderer.on<'get-tex-config'>('get-tex-config', async (_, { id }) => {\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'get-tex-config',\n    result: (await atomVars.mathJax).jaxTeXConfig(),\n  })\n})\n\nipcRenderer.on<'get-selection'>('get-selection', async (_, { id }) => {\n  const selection = window.getSelection()\n  const selectedText = selection && selection.toString()\n  const selectedNode = selection && selection.anchorNode\n\n  ipcRenderer.sendToHost<'request-reply'>('request-reply', {\n    id,\n    request: 'get-selection',\n    result: selectedText && selectedNode ? selectedText : undefined,\n  })\n})\n\ndocument.addEventListener('click', (event) => {\n  if (!event.target) return\n  const el = event.target as HTMLElement\n  if (el.tagName === 'A') {\n    const href = el.getAttribute('href')\n    if (href && href.startsWith('#')) {\n      event.preventDefault()\n      const anchor = document.getElementById(decodeURIComponent(href).slice(1))\n      if (anchor) anchor.scrollIntoView()\n    }\n  }\n})\n"]}